//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: SteppingAction.cc,v 1.1 2010-10-18 15:56:17 maire Exp $
// GEANT4 tag $Name: geant4-09-04-patch-01 $
//
// 

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#include "SteppingAction.hh"

//#include "DetectorConstruction.hh"
#include "EventAction.hh"

#include "G4Step.hh"

////#include "G4RunManager.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

SteppingAction::SteppingAction(//DetectorConstruction* det,
                                         EventAction* evt)
://detector(det), 
eventaction(evt)					 
{ }

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

SteppingAction::~SteppingAction()
{ }

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

void SteppingAction::UserSteppingAction(const G4Step* aStep)
{
  // get volume of the current step
  //G4VPhysicalVolume* volume 
  //= aStep->GetPostStepPoint()->GetTouchableHandle()->GetVolume()->GetName();
  
  // collect energy and track length step by step
  G4double edep = aStep->GetTotalEnergyDeposit();
  G4Track* track=aStep->GetTrack();
 // G4int trackid = track -> GetTrackID();
 // G4int parentid = track -> GetParentID();
  //G4double edep = track -> GetTotalEnergy();
  G4ParticleDefinition* particle=track->GetDefinition();
  G4String particleName = particle->GetParticleName();
  //G4StepPoint* poststep = aStep->GetPostStepPoint();
  //G4String physicname  = poststep->GetPhysicalVolume()->GetName();
  G4String physicname=aStep->GetPreStepPoint()->GetPhysicalVolume()->GetName();
  //G4double stepl = 0.;
  //if (aStep->GetTrack()->GetDefinition()->GetPDGCharge() != 0.)
    //stepl = aStep->GetStepLength();
  //if (physicname == "physi_moon" & edep > 0)    
//  if ((physicname == "physi_detector" || physicname == "physicone" || physicname == "physi_silica") & edep > 0)
  if (physicname == "physi_silica" & (edep/eV) > 0)// & particleName == "gamma")//)
  //if (edep > 0) 
	{
		  eventaction->total_secondary_gammas(1);
		  eventaction->energy_deposit(edep/eV);
		  //G4cout<< "Particle Name is  ---->>>"<<particleName<<"  Energy is -->" <<(edep/eV)<<
			//  "  TrackID is -->" << trackid << "  Parent ID is   -->" << parentid<<G4endl;
	}//,stepl);
  //if (volume == detector->GetGap())      eventaction->AddGap(edep,stepl);
  
  //example of saving random number seed of this event, under condition
  //// if (condition) G4RunManager::GetRunManager()->rndmSaveThisEvent(); 
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
